#include <iostream>
#include <conio.h>

using namespace std;

void cargar(int vec[],int n){
 int i;
 for(i=0;i<n;i++){
	 cout<<"Introducir elemento: ";
	 cin>>vec[i];
 }
}
void mostrar(int vec[],int n){
 int i;
 cout<<"\n\nEl vector es --->>:\n";
 for(i=0;i<n;i++){
	 cout<<vec[i]<<"  ";	 
 }
}






void eliminarElemImpares(int vec[],int &n){
 int i,k;
 for(i=0;i<n;i++){
  if(vec[i]%2!=0){
	   for(k=i;k<n-1;k++){
		   vec[k]=vec[k+1];
	   }
	   n--;
	   i--;
  }
 }
}
void main(){
	int vec[25],n;
	cout<<"Cuantos elementos para el vector?: ";
	cin>>n;
	cargar(vec,n);
	mostrar(vec,n);
	eliminarElemImpares(vec,n);
	mostrar(vec,n);
	getch();
}







void eliminarElemMayores(int vec[],int &n){
 int i,k,may=obtElemMayor(vec,n);
 for(i=0;i<n;i++){
  if(vec[i]==may){
	   for(k=i;k<n-1;k++){
		   vec[k]=vec[k+1];
	   }
	   n--;
	   i--;
  }
 }
}
void main(){
	int vec[25],n;
	cout<<"Cuantos elementos para el vector?: ";
	cin>>n;
	cargar(vec,n);
	mostrar(vec,n);
	eliminarElemMayores(vec,n);
	mostrar(vec,n);
	getch();
}






bool verifSiElemExiste(int vec[],int elem){
 int i;
 bool k=false;
 for(i=0;i<n;i++){
  if(vec[i]==elem){
	   k=true;
  }
 }
 return(k);
}
void interConjuntos(int vecA[],int nA,int vecB[],int nB,int vecC[],int &nC){
 int i;
 nC=0;
 for(i=0;i<nA;i++){
  if(verifSiExiste(vecB,nB,vecA[i])==true){
	   vecC[nC]=vecA[i];
	   nC++;
  }
 }
}
void main(){
	int vecA[10],nA,vecB[10],nB,vecC[10],nC;
	cout<<"Cuantos elementos para el vector A?: ";
	cin>>nA;
	cargar(vecA,nA);
	cout<<"Cuantos elementos para el vector A?: ";
	cin>>nB;
	cargar(vecB,nB);
	interConjuntos(vecA,nA,vecB,nB,vecC,nC);
	mostrar(vecA,nA);
	mostrar(vecB,nB);
	mostrar(vecC,nC);
	getch();
}







void ordenarAsc(int vec[],int n){
 int i,j,aux;
 for(i=0;i<n;i++){
  for(j=i++;j<i;j++){
   if(vec[j]<vec[i]){
	   aux=vec[j];
	   vec[j]=vec[i];
	   vec[i]=aux;
   }
  }
 }
}
void main(){
	int vec[25],n;
	cout<<"Cuantos elementos para el vector?: ";
	cin>>n;
	cargar(vec,n);
	mostrar(vec,n);
	ordenarAsc(vec,n);
	mostrar(vec,n);
	getch();
}








void ordenarAsc(int vec[],int n){
 int i,j,aux;
 for(i=0;i<n;i++){
  for(j=i++;j<i;j++){
   if(vec[j]<vec[i]){
	   aux=vec[j];
	   vec[j]=vec[i];
	   vec[i]=aux;
   }
  }
 }
}
void main(){
	int vec[25],n;
	cout<<"Cuantos elementos para el vector?: ";
	cin>>n;
	cargar(vec,n);
	mostrar(vec,n);
	ordenarAsc(vec,n);
	mostrar(vec,n);
	getch();
}







void eliminarElemMayores(int vec[],int &n){
 int i,k,may=obtElemMayor(vec,n);
 for(i=0;i<n;i++){
  if(vec[i]==may){
	   for(k=i;k<n-1;k++){
		   vec[k]=vec[k+1];
	   }
	   n--;
	   i--;
  }
 }
}
void main(){
	int vec[25],n;
	cout<<"Cuantos elementos para el vector?: ";
	cin>>n;
	cargar(vec,n);
	mostrar(vec,n);
	eliminarElemMayores(vec,n);
	mostrar(vec,n);
	getch();
}

